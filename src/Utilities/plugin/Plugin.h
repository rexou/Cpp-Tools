//==========================================================
// Plugin.h
//
// Définition de la classe CPlugin
//
//==========================================================

#ifndef PLUGIN_H
#define PLUGIN_H

//==========================================================
// En-têtes
//==========================================================
#include <Debug/Exceptions.h>
#include <windows.h>


namespace Yes
{
    //==========================================================
    // Classe facilitant la manipulation de plugins (DLLs)
    //==========================================================
    template <class T>
    class CPlugin
    {
    public :

        //----------------------------------------------------------
        // Constructeur par défaut
        //----------------------------------------------------------
        CPlugin();

        //----------------------------------------------------------
        // Destructeur
        //----------------------------------------------------------
        ~CPlugin();

        //----------------------------------------------------------
        // Charge la DLL et récupère un pointeur sur l'objet
        //----------------------------------------------------------
        T* Load(const std::string& Filename);

    private :

        //----------------------------------------------------------
        // Types
        //----------------------------------------------------------
        typedef T* (*PtrFunc)();

        //----------------------------------------------------------
        // Données membres
        //----------------------------------------------------------
        HMODULE m_Library; // Handle de la DLL
    };

    #include "Plugin.inl"

} // namespace Yes


#endif // PLUGIN_H
